I have a topic that contains the following most representative documents:
<sentence0>write a script to resize images using Excalidraw Automate to be proportionally uniformly sized. The size should be based on the average size of images. Reposition elements around their central position.  Excalidraw Automate uses javascript. Here's a skeleton you can work from:  relevant properties are el.x, el.y, el.width, el.height.  </sentence0>
<sentence1>I'm attempting to use 2.1.2 Camera with Distortion Model on the following page:   (you may not be able to read the equations on images on the page) I'm trying to figure out how to adjust R1, R2, R3 the radial and T1, T2 if the resolution of an image is halved on both the vertical and horizontal</sentence1>
<sentence2>I want to add coding to my anki addon that allows me to set a class for images that are sensitive and it will cause them to become blurred automatically and only unblur if the image is tapped</sentence2>
<sentence3>here's my HTML:     	 	 	TOP: Project: Etch-a-Sketch 	 	   	 		 			PLACEHOLDER 		 		 			 				 			 			 		 	       JS:  const theGridContainer = document.getElementById('theGridContainer'); const theGridItself = document.getElementById('theGridItself');  let squareSideSize = 16; let gridContainerHeight = theGridContainer.clientHeight; let gridContainerWidth = theGridContainer.clientWidth;  resizeTheGrid(); window.addEventListener('resize', resizeTheGrid);  function resizeTheGrid() {    theGridItself.style.height = `${0}px`;    theGridItself.style.width = `${0}px`;     gridContainerHeight = theGridContainer.clientHeight;    gridContainerWidth = theGridContainer.clientWidth;     if(gridContainerHeight < gridContainerWidth) {       theGridItself.style.height = `${gridContainerHeight}px`;       theGridItself.style.width = `${gridContainerHeight}px`;    } else {       theGridItself.style.height = `${gridContainerWidth}px`;       theGridItself.style.width = `${gridContainerWidth}px`;    }     drawGrid();     return; }  function drawGrid() {    clearGrid();        for(let i = 0; i < (squareSideSize ** 2); i++) {       const singleSquareDiv = document.createElement('div');       singleSquareDiv.classList.add('single-square-div');       singleSquareDiv.style.flexBasis = `${(theGridItself.clientWidth - 1) / squareSideSize}px`       theGridItself.appendChild(singleSquareDiv);    } }  function clearGrid() {    theGridItself.textContent = ''; }  CSS:  @import url(  * {     margin: 0px;     padding: 0px;     box-sizing: border-box;     color: #264653;     font-family: 'Roboto', sans-serif; }  #fullViewport {    height: 100vh;    width: 100vw;    display: flex;    flex-direction: column; }  header {     }  #content {    flex: 1 1 auto;    display: flex;    flex-wrap: wrap; }  #theGridContainer {    flex: 3 300px;    display: flex;    justify-content: center;    align-items: center; }  #theGridItself {    display: flex;    flex-wrap: wrap; }  #theGridControlPanel {    flex: 1 150px; }  .single-square-div {    flex: 1; }  /* TROUBLESHOOTING */  #theGridControlPanel {    border: 6px solid red; }  #theGridContainer {    border: 6px solid green; }  #theGridItself {    border: 6px solid orange; }  .single-square-div {    border: 1px solid black; }  All divs appended to 'theGridItself' must be organized such that each row consists of 'squareSideSize' number of divs, no more and no less. The problem I'm facing is that the DevTools width is slightly smaller than the value that 'theGridItself.clientWidth' gives, thus causing the last flex item in a row to overflow down to the next row. Subtracting 1 from this value has been my temporary solution, hence the line 'singleSquareDiv.style.flexBasis = `${(theGridItself.clientWidth - 1) / squareSideSize}px`'. But is there a better solution?</sentence3>
<sentence4>I want to get a PNG image of some stat cards I've created in my Nova Vue tool and include them in a PDF report I automatically generate every night. In order for me to do this I'm looking at some kind of tool or API I can use - which would be compatible with my Laravel application that can automatically login, go to that tool's URL then take a screenshot of the specific section and return the image. I am investigating various alternatives and would like to discuss the best way to go about this and then create a proof of concept of this working.</sentence4>
<sentence5>Right now I got stuck on accessing files on Android. I'm using  which opens native file explorer and allows to choose one or multiple files. It then returns the information about those files, including URI. URI on Android is returned in a form of "content://".  This works fine. The problem begins with accessing the file (reading):  07-04 15:09:03.050 21232 21351 W System.err: java.lang.SecurityException: Permission Denial: reading com.android.providers.media.MediaDocumentsProvider uri content://com.android.providers.media.documents/document/document:1000003887 from pid=21232, uid=10403 requires that you obtain access using ACTION_OPEN_DOCUMENT or related APIs I added  (and WRITE_EXTERNAL_STORAGE, and MANAGE_EXTERNAL_STORAGE just in case) to AndroidManifest but that did not work. I also added android:requestLegacyExternalStorage="true" (though it should not work anymore according to docs). I think that's because Android requires runtime permissions for some actions since SDK version 23:  I see that list of "Permissions that require prompting the user" includes READ_EXTERNAL_STORAGE. I've tried their snippet, however right now instead of prompt asking about permission I'm getting (in the logs) information that I just don't have permission to access storage. I also don't have any permissions listed in app's settings.  This is what I've looked at (and other): itinance/react-native-fs#395 RonRadtke/react-native-blob-util#118 itinance/react-native-fs#676 itinance/react-native-fs#756 (comment)  For a moment I thought that the problem lies in Scoped Storage but I consulted Wiktor and it's probably not the case:  </sentence5>
<sentence6>I need a bash script that executes `feh` pointing at a particular folder. It should display each of the images in the folder chronologically by capture date. The script should also repeat once it finishes all of the pictures. It needs to be able to acquire new pictures as they are added to the folder and to stop displaying images once they are removed. Ideally the script does a simple dissolve between images and a simple zoom on the image, but these are not necessary requirements.</sentence6>
<sentence7>I'm creating an image proxy which downloads HTTP images and sends them to the client over HTTPS to prevent mixed-content issues.  There is a maxSize option, which stops the download if it exceeds it. What would be a reasonable default value for this in bytes? Take into account the following image mime types and how large some of these file types might get.    'image/bmp',   'image/cgm',   'image/g3fax',   'image/gif',   'image/ief',   'image/jp2',   'image/jpeg',   'image/jpg',   'image/pict',   'image/png',   'image/prs.btif',   'image/svg+xml',   'image/tiff',   'image/vnd.adobe.photoshop',   'image/vnd.djvu',   'image/vnd.dwg',   'image/vnd.dxf',   'image/vnd.fastbidsheet',   'image/vnd.fpx',   'image/vnd.fst',   'image/vnd.fujixerox.edmics-mmr',   'image/vnd.fujixerox.edmics-rlc',   'image/vnd.microsoft.icon',   'image/vnd.ms-modi',   'image/vnd.net-fpx',   'image/vnd.wap.wbmp',   'image/vnd.xiff',   'image/webp',   'image/x-cmu-raster',   'image/x-cmx',   'image/x-icon',   'image/x-macpaint',   'image/x-pcx',   'image/x-pict',   'image/x-portable-anymap',   'image/x-portable-bitmap',   'image/x-portable-graymap',   'image/x-portable-pixmap',   'image/x-quicktime',   'image/x-rgb',   'image/x-xbitmap',   'image/x-xpixmap',   'image/x-xwindowdump' </sentence7>
<sentence8>I have a challenge for you. I'm working in a react/typescript application that allows users to generate images with AI, and I'm working on removing what remains of the backend. One piece I need to address is the "saved images" that people have saved on my server. There is an api client that fetches images from the backend right now, and another component that caches most of the payload for each image locally. I'd like to refactor the images cache to fetch from google drive instead - the user will first need to authorize this.  There is an image record, and image png files to go with it (thumbnail and image). I need you to write a class that can save image record payloads, image files, paginate through images by timestamp, and get a presigned url (or if we have to, just load the image data into base64 image url) for the image files. User should be able to delete them as well. Do you have any questions, or can you write that class? I don't have much experience working with google drive.</sentence8>
<sentence9>on scroll, i want to apply zoom and color effect on my images, using tailwind css  currently my design is mostly for desktop screens. on mouse hover, the images get color and a zoom effect    now, what tailwind utility classes can i apply, so that, these effects are applied when the user scrolls to the particular image...</sentence9>


The topic is described by the following keywords: images, image, pictures, files, file, folder, zoom, uri, script, tailwind,

Based on the information about the topic above, 
1) Analyze the keywords and come up with a general label. Explain why? 
2) cluster the most representative sentences to come up with sub-labels. Explain why? 

DO NOT FORGET TO include the first 10 character of that sentences that you use to come up with that sub-category, so that I can read the sentences you have clustered and see if you come up with correct label for that. 
Take your time and think, then come up with the best, precise, and meaningful label and sub-labels.

Now Take a deep breath and start