I have a topic that contains the following most representative documents:
<sentence0>When defining interfaces in typescript, is it common to use an `I` prefix for interface names?</sentence0>
<sentence1>in typescript: could you create an enum consisting of 5 categories, which are used to categorize software projects? Could you then initialize variables which have as a type a list of this enum.</sentence1>
<sentence2>The json representation of the sentence "Create a travel website of Forts in Jaipur" is {"topic": "Forts in Jaipur", "template": "website", "action": "create"}. Similarly, The json representation of the sentence "Build a poster on tourist places in Ladakh" is {"topic": "Tourist places in Ladakh", "template": "poster", "action": "build"} Now, return the JSON for "Create a travel website of Forts in New Delhi".</sentence2>
<sentence3>I wish that in typescript I could mark a function as "throws" and then when calling that function, there is a build error (or warning) that says there is an unhandled exception. Are there any packages in node (or native typescript) that could accomplish this?</sentence3>
<sentence4>I am telling an LLM about the "arguments" property of an object. The arguments property must be of type `string`. My description of the arguments property is `"The arguments to pass into the script being executed"`. How can I concisely and effectively modify the description to inform the LLM that the arguments must be in json format? </sentence4>
<sentence5>I have an array of type ({ something: string } | null)[] (this is Typescript) I want it filtered to get rid of nulls and so that the type becomes { something: string }[]</sentence5>
<sentence6>'You are a service that translates user requests into JSON objects of type "Plan" according to the following TypeScript definitions:The following is a user request:The following is the user request translated into a JSON object with 2 spaces of indentation and no properties with the value undefined:'</sentence6>
<sentence7>In Linux, when you attach an ethernet cable to machine, you get a new ethernet interface. In this interface, you can assign an IP address. Is it possible for there to be more than 1 IP address for a single interface?</sentence7>
<sentence8>I have some duplication in my TypeScript code. I resolve it, I want to create a discriminated union based on the keys and values of the interface. My code is blow. Is it possible to do what I want?  type PrefixMap = {   nprofile: ProfilePointer   nrelay: string   nevent: EventPointer   naddr: AddressPointer   nsec: string   npub: string   note: string }  type DecodeValue = {   type: Prefix   data: Data }  export type DecodeResult =   | DecodeValue   | DecodeValue   | DecodeValue   | DecodeValue   | DecodeValue   | DecodeValue   | DecodeValue</sentence8>
<sentence9>You are an agent in a gridworld. The environment is a gridworld with a 2D view from above.  It contains a single agent and a number of objects.  The possible colors are: red, green, blue, purple, yellow, grey  The possible objects are: unseen, empty, wall, floor, door, key, ball, box, goal, lava, agent  A grid cell is represented by 2-character string, the first one for the object and the second one for the color.  # Map of object types to short string OBJECT_TO_STR = {     "wall": "W",     "floor": "F",     "door": "D",     "locked_door": "L",     "key": "K",     "ball": "A",     "box": "B",     "goal": "G",     "lava": "V", }  # Map of colors to short string COLOR_TO_STR = {     "red": "R",     "green": "G",     "blue": "B",     "purple": "P",     "yellow": "Y",     "grey": "G", }  # Map agent's direction to short string AGENT_DIR_TO_STR = {0: ">", 1: "V", 2: ">  WG  BP    WG WGWGWGWGWGWGWGWGWGWGWG  The mission is:  pick up the purple box           The rules of the environment are: 1. You can pick up an object if you are standing on it. 2. You can drop an object if you are holding it. 3. You can toggle an object if it is in front of you. 4. You can move forward, turn left, or turn right. 5. You can only pick up an object if you are not holding anything. 6. When you drop an object, it will be placed on the grid cell you are standing on. 7. You cannot walk through walls. 8. You cannot walk through locked doors. 9. You can unlock a locked door with the correct key.   1. What is the mission? 2. Can you walk through walls? 3. Are you in the same room as the goal object? 4. How can you get to the goal object? 5. How do you get to the goal object if you are blocked by a locked door and walls? </sentence9>


The topic is described by the following keywords: json, typescript, type, types, object, parametersobj, objects, string, representation, map,

Based on the information about the topic above, 
1) Analyze the keywords and come up with a general label. Explain why? 
2) cluster the most representative sentences to come up with sub-labels. Explain why? 

DO NOT FORGET TO include the first 10 character of that sentences that you use to come up with that sub-category, so that I can read the sentences you have clustered and see if you come up with correct label for that. 
Take your time and think, then come up with the best, precise, and meaningful label and sub-labels.

Now Take a deep breath and start